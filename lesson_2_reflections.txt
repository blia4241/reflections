What happens when you initialize a repository? Why do you need to do it?
	A .git file is created. This is necessary as it helps the git repository to track changes in all of the files contained within the directory. This function is essential to the git system. 

How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area is almost like a testing ground/sandbox, it does not directly interfere with the files for working/tracking but instead condenses all of the commits made into simpler, compact ones for the git repository.

How can you use the staging area to make sure you have one commit per logical change?
	Use the staging area to add multiple files. Compile them together to perform a clear, logical change to the game/project. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	If alternative versions of the file are needed instead of a single master branch, so that different possibilities can be explored by switching back and forth. 

How do the diagrams help you visualize the branch structure?
	It shows how each commit branches out and makes clear which commits are unreachable. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	Merging two branches together combines all the changes in the two branches into a new master branch. The diagram visualises all existant branches and is crucial to figure out which commits are unreachable. 

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
